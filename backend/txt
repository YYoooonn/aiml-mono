# BUILD
FROM gradle:8.10.2-jdk17 AS builder
WORKDIR /app

# Gradle Wrapper와 소스 코드 복사
COPY gradle gradle #
COPY build.gradle settings.gradle ./
COPY src src

# Gradle로 빌드
RUN gradle build --no-daemon

# Backend (Spring App) Dockerfile

# 1단계: Gradle로 빌드
FROM gradle:7.6.0-jdk17 AS builder
WORKDIR /app
COPY gradle gradle
COPY build.gradle settings.gradle ./
COPY src src
RUN gradle build --no-daemon


# RUN
FROM openjdk:17-jdk-slim

# 빌드된 JAR 파일 복사
COPY --from=builder /app/build/libs/*.jar app.jar

# 컨테이너 시작 시 실행될 명령어
ENTRYPOINT ["java", "-jar", "/app.jar"]


# Backend (Spring App) Dockerfile



    ################################################
# BUILD 단계 ? COPY gradlew
FROM gradle:8.10.2-jdk17 AS builder
WORKDIR /app
COPY gradle gradle
COPY gradlew build.gradle settings.gradle ./
COPY src src
RUN gradle build --no-daemon

# RUN 단계
FROM openjdk:17-jdk-slim
WORKDIR /app
COPY --from=builder /app/build/libs/backend-0.0.1-SNAPSHOT.jar app.jar
ENTRYPOINT ["java", "-jar", "/app.jar"]

### default.conf ################################################
# back
server {
    listen 80;

    server_name _;

    location / {
        proxy_pass http://localhost:8080;
        proxy_set_header X-Real_IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
    }
}

#################################################docker-compose#####
version: "3"

services:

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8080

  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/nginx.Dockerfile
    ports:
      - 80:80
    depends_on:
      - frontend
